{"ast":null,"code":"import fetchData from './utils/fetchData';\nimport { v4 as uuidv4 } from 'uuid';\nimport uploadFile from '../firebase/uploadFile';\nconst url = process.env.REACT_APP_SERVER_URL + '/user';\nexport const register = async (user, dispatch) => {\n  dispatch({\n    type: 'START_LOADING'\n  });\n  const result = await fetchData({\n    url: url + '/register',\n    body: user\n  }, dispatch);\n  if (result) {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: result\n    });\n    dispatch({\n      type: 'CLOSE_LOGIN'\n    });\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'success',\n        message: 'Your account has been created successfully'\n      }\n    });\n  }\n  dispatch({\n    type: 'END_LOADING'\n  });\n};\nexport const login = async (user, dispatch) => {\n  dispatch({\n    type: 'START_LOADING'\n  });\n  const result = await fetchData({\n    url: url + '/login',\n    body: user\n  }, dispatch);\n  if (result) {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: result\n    });\n    dispatch({\n      type: 'CLOSE_LOGIN'\n    });\n  }\n  dispatch({\n    type: 'END_LOADING'\n  });\n};\nexport const updateProfile = async (currentUser, updatedFields, dispatch) => {\n  dispatch({\n    type: 'START_LOADING'\n  });\n  const {\n    name,\n    file\n  } = updatedFields;\n  let body = {\n    name\n  };\n  try {\n    if (file) {\n      var _file$name, _file$name$split;\n      const imageName = uuidv4() + '.' + (file === null || file === void 0 ? void 0 : (_file$name = file.name) === null || _file$name === void 0 ? void 0 : (_file$name$split = _file$name.split('.')) === null || _file$name$split === void 0 ? void 0 : _file$name$split.pop());\n      const photoURL = await uploadFile(file, `profile/${currentUser === null || currentUser === void 0 ? void 0 : currentUser.id}/${imageName}`);\n      body = {\n        ...body,\n        photoURL\n      };\n    }\n    const result = await fetchData({\n      url: url + '/updateProfile',\n      method: 'PATCH',\n      body,\n      token: currentUser.token\n    }, dispatch);\n    if (result) {\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: {\n          ...currentUser,\n          ...result\n        }\n      });\n      dispatch({\n        type: 'UPDATE_ALERT',\n        payload: {\n          open: true,\n          severity: 'success',\n          message: 'Your profile has been updated successfully'\n        }\n      });\n      dispatch({\n        type: 'UPDATE_PROFILE',\n        payload: {\n          open: false,\n          file: null,\n          photoURL: result.photoURL\n        }\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'error',\n        message: error.message\n      }\n    });\n    console.log(error);\n  }\n  dispatch({\n    type: 'END_LOADING'\n  });\n};","map":{"version":3,"names":["fetchData","v4","uuidv4","uploadFile","url","process","env","REACT_APP_SERVER_URL","register","user","dispatch","type","result","body","payload","open","severity","message","login","updateProfile","currentUser","updatedFields","name","file","_file$name","_file$name$split","imageName","split","pop","photoURL","id","method","token","error","console","log"],"sources":["D:/place-to-stay-part6/client/src/actions/user.js"],"sourcesContent":["import fetchData from './utils/fetchData';\nimport { v4 as uuidv4 } from 'uuid';\nimport uploadFile from '../firebase/uploadFile';\n\nconst url = process.env.REACT_APP_SERVER_URL + '/user';\n\nexport const register = async (user, dispatch) => {\n  dispatch({ type: 'START_LOADING' });\n\n  const result = await fetchData(\n    { url: url + '/register', body: user },\n    dispatch\n  );\n  if (result) {\n    dispatch({ type: 'UPDATE_USER', payload: result });\n    dispatch({ type: 'CLOSE_LOGIN' });\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'success',\n        message: 'Your account has been created successfully',\n      },\n    });\n  }\n\n  dispatch({ type: 'END_LOADING' });\n};\n\nexport const login = async (user, dispatch) => {\n  dispatch({ type: 'START_LOADING' });\n\n  const result = await fetchData({ url: url + '/login', body: user }, dispatch);\n  if (result) {\n    dispatch({ type: 'UPDATE_USER', payload: result });\n    dispatch({ type: 'CLOSE_LOGIN' });\n  }\n\n  dispatch({ type: 'END_LOADING' });\n};\n\nexport const updateProfile = async (currentUser, updatedFields, dispatch) => {\n  dispatch({ type: 'START_LOADING' });\n\n  const { name, file } = updatedFields;\n  let body = { name };\n  try {\n    if (file) {\n      const imageName = uuidv4() + '.' + file?.name?.split('.')?.pop();\n      const photoURL = await uploadFile(\n        file,\n        `profile/${currentUser?.id}/${imageName}`\n      );\n      body = { ...body, photoURL };\n    }\n    const result = await fetchData(\n      {\n        url: url + '/updateProfile',\n        method: 'PATCH',\n        body,\n        token: currentUser.token,\n      },\n      dispatch\n    );\n    if (result) {\n      dispatch({ type: 'UPDATE_USER', payload: { ...currentUser, ...result } });\n      dispatch({\n        type: 'UPDATE_ALERT',\n        payload: {\n          open: true,\n          severity: 'success',\n          message: 'Your profile has been updated successfully',\n        },\n      });\n      dispatch({\n        type: 'UPDATE_PROFILE',\n        payload: { open: false, file: null, photoURL: result.photoURL },\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'error',\n        message: error.message,\n      },\n    });\n    console.log(error);\n  }\n\n  dispatch({ type: 'END_LOADING' });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}