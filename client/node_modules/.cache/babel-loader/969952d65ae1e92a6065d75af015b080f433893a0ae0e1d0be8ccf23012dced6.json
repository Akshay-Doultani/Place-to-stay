{"ast":null,"code":"const fetchData = async ({\n  url,\n  method = 'POST',\n  token = '',\n  body = null\n}, dispatch) => {\n  const headers = token ? {\n    'Content-Type': 'application/json',\n    authorization: `Bearer ${token}`\n  } : {\n    'Content-Type': 'application/json'\n  };\n  body = body ? {\n    body: JSON.stringify(body)\n  } : {};\n  try {\n    const response = await fetch(url, {\n      method,\n      headers,\n      ...body\n    });\n    const data = await response.json();\n\n    // Check if response status is not OK\n    if (!response.ok) {\n      if (response.status === 401) {\n        dispatch({\n          type: 'UPDATE_USER',\n          payload: null\n        });\n      }\n      throw new Error(data.message || 'Unknown error occurred');\n    }\n    return data.result || data.message; // Handle both result and message\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: {\n        open: true,\n        severity: 'error',\n        message: error.message\n      }\n    });\n    console.log(error);\n    return null;\n  }\n};\nexport default fetchData;","map":{"version":3,"names":["fetchData","url","method","token","body","dispatch","headers","authorization","JSON","stringify","response","fetch","data","json","ok","status","type","payload","Error","message","result","error","open","severity","console","log"],"sources":["D:/place-to-stay-part6/client/src/actions/utils/fetchData.js"],"sourcesContent":["const fetchData = async (\n  { url, method = 'POST', token = '', body = null },\n  dispatch\n) => {\n  const headers = token\n    ? { 'Content-Type': 'application/json', authorization: `Bearer ${token}` }\n    : { 'Content-Type': 'application/json' };\n  body = body ? { body: JSON.stringify(body) } : {};\n  try {\n    const response = await fetch(url, { method, headers, ...body });\n    const data = await response.json();\n\n    // Check if response status is not OK\n    if (!response.ok) {\n      if (response.status === 401) {\n        dispatch({ type: 'UPDATE_USER', payload: null });\n      }\n      throw new Error(data.message || 'Unknown error occurred');\n    }\n\n    return data.result || data.message; // Handle both result and message\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_ALERT',\n      payload: { open: true, severity: 'error', message: error.message },\n    });\n    console.log(error);\n    return null;\n  }\n};\n\nexport default fetchData;\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,MAAAA,CAChB;EAAEC,GAAG;EAAEC,MAAM,GAAG,MAAM;EAAEC,KAAK,GAAG,EAAE;EAAEC,IAAI,GAAG;AAAK,CAAC,EACjDC,QAAQ,KACL;EACH,MAAMC,OAAO,GAAGH,KAAK,GACjB;IAAE,cAAc,EAAE,kBAAkB;IAAEI,aAAa,EAAE,UAAUJ,KAAK;EAAG,CAAC,GACxE;IAAE,cAAc,EAAE;EAAmB,CAAC;EAC1CC,IAAI,GAAGA,IAAI,GAAG;IAAEA,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI;EAAE,CAAC,GAAG,CAAC,CAAC;EACjD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,EAAE;MAAEC,MAAM;MAAEI,OAAO;MAAE,GAAGF;IAAK,CAAC,CAAC;IAC/D,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;IAElC;IACA,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3BV,QAAQ,CAAC;UAAEW,IAAI,EAAE,aAAa;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAC;MAClD;MACA,MAAM,IAAIC,KAAK,CAACN,IAAI,CAACO,OAAO,IAAI,wBAAwB,CAAC;IAC3D;IAEA,OAAOP,IAAI,CAACQ,MAAM,IAAIR,IAAI,CAACO,OAAO,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdhB,QAAQ,CAAC;MACPW,IAAI,EAAE,cAAc;MACpBC,OAAO,EAAE;QAAEK,IAAI,EAAE,IAAI;QAAEC,QAAQ,EAAE,OAAO;QAAEJ,OAAO,EAAEE,KAAK,CAACF;MAAQ;IACnE,CAAC,CAAC;IACFK,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClB,OAAO,IAAI;EACb;AACF,CAAC;AAED,eAAerB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}