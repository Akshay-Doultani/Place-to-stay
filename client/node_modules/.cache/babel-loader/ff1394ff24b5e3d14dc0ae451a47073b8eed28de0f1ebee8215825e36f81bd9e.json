{"ast":null,"code":"var _jsxFileName = \"D:\\\\place-to-stay-part6\\\\client\\\\src\\\\components\\\\addRoom\\\\addLocation\\\\AddLocation.js\",\n  _s = $RefreshSig$();\nimport { Box } from '@mui/material';\nimport ReactMapGL, { GeolocateControl, Marker, NavigationControl } from 'react-map-gl';\nimport { useValue } from '../../../context/ContextProvider';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useEffect, useRef } from 'react';\nimport Geocoder from './Geocoder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddLocation = () => {\n  _s();\n  const {\n    state: {\n      location: {\n        lng,\n        lat\n      }\n    },\n    dispatch\n  } = useValue();\n  const mapRef = useRef();\n  useEffect(() => {\n    if (!lng && !lat) {\n      fetch('https://ipapi.co/json').then(response => response.json()).then(data => {\n        const {\n          longitude,\n          latitude\n        } = data;\n        if (mapRef.current && longitude && latitude) {\n          mapRef.current.flyTo({\n            center: [longitude, latitude]\n          });\n          dispatch({\n            type: 'UPDATE_LOCATION',\n            payload: {\n              lng: longitude,\n              lat: latitude\n            }\n          });\n        }\n      }).catch(error => {\n        console.error('Error fetching geolocation:', error);\n      });\n    }\n  }, [lng, lat, dispatch]);\n  if (!lng || !lat) {\n    return null; // Or render a loading state until coordinates are fetched\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, {\n      ref: mapRef,\n      mapboxAccessToken: process.env.REACT_APP_MAP_TOKEN,\n      initialViewState: {\n        longitude: lng,\n        latitude: lat,\n        zoom: 8\n      },\n      mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n      children: [lng && lat && /*#__PURE__*/_jsxDEV(Marker, {\n        latitude: lat,\n        longitude: lng,\n        draggable: true,\n        onDragEnd: e => dispatch({\n          type: 'UPDATE_LOCATION',\n          payload: {\n            lng: e.lngLat.lng,\n            lat: e.lngLat.lat\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavigationControl, {\n        position: \"bottom-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeolocateControl, {\n        position: \"top-left\",\n        trackUserLocation: true,\n        onGeolocate: e => dispatch({\n          type: 'UPDATE_LOCATION',\n          payload: {\n            lng: e.coords.longitude,\n            lat: e.coords.latitude\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Geocoder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AddLocation, \"6+epqGEmZlUq/rqNKOrIW+m+1fE=\", false, function () {\n  return [useValue];\n});\n_c = AddLocation;\nexport default AddLocation;\nvar _c;\n$RefreshReg$(_c, \"AddLocation\");","map":{"version":3,"names":["Box","ReactMapGL","GeolocateControl","Marker","NavigationControl","useValue","useEffect","useRef","Geocoder","jsxDEV","_jsxDEV","AddLocation","_s","state","location","lng","lat","dispatch","mapRef","fetch","then","response","json","data","longitude","latitude","current","flyTo","center","type","payload","catch","error","console","sx","height","position","children","ref","mapboxAccessToken","process","env","REACT_APP_MAP_TOKEN","initialViewState","zoom","mapStyle","draggable","onDragEnd","e","lngLat","fileName","_jsxFileName","lineNumber","columnNumber","trackUserLocation","onGeolocate","coords","_c","$RefreshReg$"],"sources":["D:/place-to-stay-part6/client/src/components/addRoom/addLocation/AddLocation.js"],"sourcesContent":["import { Box } from '@mui/material';\nimport ReactMapGL, {\n  GeolocateControl,\n  Marker,\n  NavigationControl,\n} from 'react-map-gl';\nimport { useValue } from '../../../context/ContextProvider';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useEffect, useRef } from 'react';\nimport Geocoder from './Geocoder';\n\nconst AddLocation = () => {\n  const {\n    state: {\n      location: { lng, lat },\n    },\n    dispatch,\n  } = useValue();\n  const mapRef = useRef();\n\n  useEffect(() => {\n    if (!lng && !lat) {\n      fetch('https://ipapi.co/json')\n        .then((response) => response.json())\n        .then((data) => {\n          const { longitude, latitude } = data;\n          if (mapRef.current && longitude && latitude) {\n            mapRef.current.flyTo({\n              center: [longitude, latitude],\n            });\n            dispatch({\n              type: 'UPDATE_LOCATION',\n              payload: { lng: longitude, lat: latitude },\n            });\n          }\n        })\n        .catch((error) => {\n          console.error('Error fetching geolocation:', error);\n        });\n    }\n  }, [lng, lat, dispatch]);\n\n  if (!lng || !lat) {\n    return null; // Or render a loading state until coordinates are fetched\n  }\n\n  return (\n    <Box\n      sx={{\n        height: 400,\n        position: 'relative',\n      }}\n    >\n      <ReactMapGL\n        ref={mapRef}\n        mapboxAccessToken={process.env.REACT_APP_MAP_TOKEN}\n        initialViewState={{\n          longitude: lng,\n          latitude: lat,\n          zoom: 8,\n        }}\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n      >\n        {lng && lat && (\n          <Marker\n            latitude={lat}\n            longitude={lng}\n            draggable\n            onDragEnd={(e) =>\n              dispatch({\n                type: 'UPDATE_LOCATION',\n                payload: { lng: e.lngLat.lng, lat: e.lngLat.lat },\n              })\n            }\n          />\n        )}\n        <NavigationControl position=\"bottom-right\" />\n        <GeolocateControl\n          position=\"top-left\"\n          trackUserLocation\n          onGeolocate={(e) =>\n            dispatch({\n              type: 'UPDATE_LOCATION',\n              payload: { lng: e.coords.longitude, lat: e.coords.latitude },\n            })\n          }\n        />\n        <Geocoder />\n      </ReactMapGL>\n    </Box>\n  );\n};\n\nexport default AddLocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}