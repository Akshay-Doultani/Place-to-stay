{"ast":null,"code":"var _jsxFileName = \"D:\\\\place-to-stay-part6\\\\client\\\\src\\\\components\\\\EditRoomForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, TextField\n// ... other necessary components\n} from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditRoomForm = ({\n  roomId,\n  onClose\n}) => {\n  _s();\n  const [roomData, setRoomData] = useState(null);\n  useEffect(() => {\n    const fetchRoomData = async () => {\n      try {\n        const response = await fetch(`/api/rooms/${roomId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch room data');\n        }\n        const data = await response.json();\n        setRoomData(data);\n      } catch (error) {\n        console.error('Error fetching room data:', error);\n        // Handle error, e.g., display an error message\n      }\n    };\n    fetchRoomData();\n  }, [roomId]);\n  const handleSubmit = async updatedData => {\n    try {\n      const response = await fetch(`/api/rooms/${roomId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n          // Add authorization header if required\n        },\n        body: JSON.stringify(updatedData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update room');\n      }\n\n      // Handle successful update, e.g., close the form, update room data in parent component\n      onClose();\n    } catch (error) {\n      console.error('Error updating room:', error);\n      // Handle error, e.g., display an error message to the user\n    }\n  };\n  if (!roomData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading room data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      value: roomData.title,\n      onChange: e => setRoomData({\n        ...roomData,\n        title: e.target.value\n      }),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleSubmit(roomData),\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(EditRoomForm, \"0P1Qcn9Bf7CCk+IL3CfA7tgD104=\");\n_c = EditRoomForm;\nexport default EditRoomForm;\nvar _c;\n$RefreshReg$(_c, \"EditRoomForm\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","TextField","jsxDEV","_jsxDEV","EditRoomForm","roomId","onClose","_s","roomData","setRoomData","fetchRoomData","response","fetch","ok","Error","data","json","error","console","handleSubmit","updatedData","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","label","value","title","onChange","e","target","fullWidth","onClick","_c","$RefreshReg$"],"sources":["D:/place-to-stay-part6/client/src/components/EditRoomForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  // ... other necessary components\r\n} from '@mui/material';\r\n\r\nconst EditRoomForm = ({ roomId, onClose }) => {\r\n  const [roomData, setRoomData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRoomData = async () => {\r\n      try {\r\n        const response = await fetch(`/api/rooms/${roomId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch room data');\r\n        }\r\n        const data = await response.json();\r\n        setRoomData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching room data:', error);\r\n        // Handle error, e.g., display an error message\r\n      }\r\n    };\r\n\r\n    fetchRoomData();\r\n  }, [roomId]);\r\n\r\n  const handleSubmit = async (updatedData) => {\r\n    try {\r\n      const response = await fetch(`/api/rooms/${roomId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // Add authorization header if required\r\n        },\r\n        body: JSON.stringify(updatedData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update room');\r\n      }\r\n\r\n      // Handle successful update, e.g., close the form, update room data in parent component\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error updating room:', error);\r\n      // Handle error, e.g., display an error message to the user\r\n    }\r\n  };\r\n\r\n  if (!roomData) {\r\n    return <div>Loading room data...</div>;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      {/* Form fields for editing room details */}\r\n      <TextField\r\n        label=\"Title\"\r\n        value={roomData.title}\r\n        onChange={(e) => setRoomData({ ...roomData, title: e.target.value })}\r\n        fullWidth\r\n      />\r\n      {/* Other form fields for room details */}\r\n      <Button onClick={() => handleSubmit(roomData)}>Save Changes</Button>\r\n      <Button onClick={onClose}>Cancel</Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditRoomForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}