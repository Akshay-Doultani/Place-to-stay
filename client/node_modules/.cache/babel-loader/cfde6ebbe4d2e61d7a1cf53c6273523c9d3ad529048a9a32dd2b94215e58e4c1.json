{"ast":null,"code":"var _jsxFileName = \"D:\\\\place-to-stay-part6\\\\client\\\\src\\\\components\\\\map\\\\ClusterMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useValue } from '../../context/ContextProvider';\nimport { getRooms } from '../../actions/room';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport Supercluster from 'supercluster';\nimport './cluster.css';\nimport { Avatar, Paper, Tooltip } from '@mui/material';\n// import GeocoderInput from '../sidebar/GeocoderInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supercluster = new Supercluster({\n  radius: 75,\n  maxZoom: 20\n});\nconst ClusterMap = () => {\n  _s();\n  const {\n    state: {\n      filteredRooms\n    },\n    dispatch,\n    mapRef\n  } = useValue();\n  const [points, setPoints] = useState([]);\n  const [clusters, setClusters] = useState([]);\n  const [bounds, setBounds] = useState([-180, -85, 180, 85]);\n  const [zoom, setZoom] = useState(0);\n  useEffect(() => {\n    getRooms(dispatch);\n  }, []);\n  useEffect(() => {\n    const points = filteredRooms.map(room => ({\n      type: 'Feature',\n      properties: {\n        cluster: false,\n        roomId: room._id,\n        price: room.price,\n        title: room.title,\n        description: room.description,\n        lng: room.lng,\n        lat: room.lat,\n        images: room.images,\n        uPhoto: room.uPhoto,\n        uName: room.uName\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [parseFloat(room.lng), parseFloat(room.lat)]\n      }\n    }));\n    setPoints(points);\n  }, [filteredRooms]);\n  useEffect(() => {\n    supercluster.load(points);\n    setClusters(supercluster.getClusters(bounds, zoom));\n  }, [points, zoom, bounds]);\n  useEffect(() => {\n    if (mapRef.current) {\n      setBounds(mapRef.current.getMap().getBounds().toArray().flat());\n    }\n  }, [mapRef === null || mapRef === void 0 ? void 0 : mapRef.current]);\n  return /*#__PURE__*/_jsxDEV(ReactMapGL, {\n    initialViewState: {\n      latitude: 51.5072,\n      longitude: 0.1276\n    },\n    mapboxAccessToken: process.env.REACT_APP_MAP_TOKEN,\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    ref: mapRef,\n    onZoomEnd: e => setZoom(Math.round(e.viewState.zoom)),\n    children: clusters.map(cluster => {\n      const {\n        cluster: isCluster,\n        point_count\n      } = cluster.properties;\n      const [longitude, latitude] = cluster.geometry.coordinates;\n      if (isCluster) {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          longitude: longitude,\n          latitude: latitude,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cluster-marker\",\n            style: {\n              width: `${10 + point_count / points.length * 20}px`,\n              height: `${10 + point_count / points.length * 20}px`\n            },\n            onClick: () => {\n              const zoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 20);\n              mapRef.current.flyTo({\n                center: [longitude, latitude],\n                zoom,\n                speed: 1\n              });\n            },\n            children: point_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, `cluster-${cluster.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        longitude: longitude,\n        latitude: latitude,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: cluster.properties.uName,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: cluster.properties.uPhoto,\n            component: Paper,\n            elevation: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, `room-${cluster.properties.roomId}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ClusterMap, \"NbCfIv4ww4ngV42MR0eP6RVCiNs=\", false, function () {\n  return [useValue];\n});\n_c = ClusterMap;\nexport default ClusterMap;\nvar _c;\n$RefreshReg$(_c, \"ClusterMap\");","map":{"version":3,"names":["React","useEffect","useState","useValue","getRooms","ReactMapGL","Marker","Supercluster","Avatar","Paper","Tooltip","jsxDEV","_jsxDEV","supercluster","radius","maxZoom","ClusterMap","_s","state","filteredRooms","dispatch","mapRef","points","setPoints","clusters","setClusters","bounds","setBounds","zoom","setZoom","map","room","type","properties","cluster","roomId","_id","price","title","description","lng","lat","images","uPhoto","uName","geometry","coordinates","parseFloat","load","getClusters","current","getMap","getBounds","toArray","flat","initialViewState","latitude","longitude","mapboxAccessToken","process","env","REACT_APP_MAP_TOKEN","mapStyle","ref","onZoomEnd","e","Math","round","viewState","children","isCluster","point_count","className","style","width","length","height","onClick","min","getClusterExpansionZoom","id","flyTo","center","speed","fileName","_jsxFileName","lineNumber","columnNumber","src","component","elevation","_c","$RefreshReg$"],"sources":["D:/place-to-stay-part6/client/src/components/map/ClusterMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useValue } from '../../context/ContextProvider';\nimport { getRooms } from '../../actions/room';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport Supercluster from 'supercluster';\nimport './cluster.css';\nimport { Avatar, Paper, Tooltip } from '@mui/material';\n// import GeocoderInput from '../sidebar/GeocoderInput';\n\nconst supercluster = new Supercluster({\n  radius: 75,\n  maxZoom: 20,\n});\n\nconst ClusterMap = () => {\n  const {\n    state: { filteredRooms },\n    dispatch,\n    mapRef,\n  } = useValue();\n  const [points, setPoints] = useState([]);\n  const [clusters, setClusters] = useState([]);\n  const [bounds, setBounds] = useState([-180, -85, 180, 85]);\n  const [zoom, setZoom] = useState(0);\n\n  useEffect(() => {\n    getRooms(dispatch);\n  }, []);\n\n  useEffect(() => {\n    const points = filteredRooms.map((room) => ({\n      type: 'Feature',\n      properties: {\n        cluster: false,\n        roomId: room._id,\n        price: room.price,\n        title: room.title,\n        description: room.description,\n        lng: room.lng,\n        lat: room.lat,\n        images: room.images,\n        uPhoto: room.uPhoto,\n        uName: room.uName,\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [parseFloat(room.lng), parseFloat(room.lat)],\n      },\n    }));\n    setPoints(points);\n  }, [filteredRooms]);\n\n  useEffect(() => {\n    supercluster.load(points);\n    setClusters(supercluster.getClusters(bounds, zoom));\n  }, [points, zoom, bounds]);\n\n  useEffect(() => {\n    if (mapRef.current) {\n      setBounds(mapRef.current.getMap().getBounds().toArray().flat());\n    }\n  }, [mapRef?.current]);\n  return (\n    <ReactMapGL\n      initialViewState={{ latitude: 51.5072, longitude: 0.1276 }}\n      mapboxAccessToken={process.env.REACT_APP_MAP_TOKEN}\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n      ref={mapRef}\n      onZoomEnd={(e) => setZoom(Math.round(e.viewState.zoom))}\n    >\n      {clusters.map((cluster) => {\n        const { cluster: isCluster, point_count } = cluster.properties;\n        const [longitude, latitude] = cluster.geometry.coordinates;\n        if (isCluster) {\n          return (\n            <Marker\n              key={`cluster-${cluster.id}`}\n              longitude={longitude}\n              latitude={latitude}\n            >\n              <div\n                className=\"cluster-marker\"\n                style={{\n                  width: `${10 + (point_count / points.length) * 20}px`,\n                  height: `${10 + (point_count / points.length) * 20}px`,\n                }}\n                onClick={() => {\n                  const zoom = Math.min(\n                    supercluster.getClusterExpansionZoom(cluster.id),\n                    20\n                  );\n                  mapRef.current.flyTo({\n                    center: [longitude, latitude],\n                    zoom,\n                    speed: 1,\n                  });\n                }}\n              >\n                {point_count}\n              </div>\n            </Marker>\n          );\n        }\n\n        return (\n          <Marker\n            key={`room-${cluster.properties.roomId}`}\n            longitude={longitude}\n            latitude={latitude}\n          >\n            <Tooltip title={cluster.properties.uName}>\n              <Avatar\n                src={cluster.properties.uPhoto}\n                component={Paper}\n                elevation={2}\n              />\n            </Tooltip>\n          </Marker>\n        );\n      })}\n      {/* <GeocoderInput /> */}\n    </ReactMapGL>\n  );\n};\n\nexport default ClusterMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}